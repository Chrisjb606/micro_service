# .github/workflows/deploy.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1) Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # 3) Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 4) Build the Docker image
      - name: Build Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/micro_service:${{ github.sha }}
          docker build -t $IMAGE_URI .

      # 5) Push the Docker image to ECR
      - name: Push Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/micro_service:${{ github.sha }}
          docker push $IMAGE_URI

      # 6) Deploy the CloudFormation stack
      - name: Deploy CloudFormation stack
        id: deploy-cfn
        run: |
          aws cloudformation deploy \
            --stack-name micro-service-ecs \
            --template-file infra/ecs.yml \
            --region ${{ env.AWS_REGION }} \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
                ImageUri=${{ steps.login-ecr.outputs.registry }}/micro_service:${{ github.sha }} \
                ClusterName=micro-service-cluster \
                ServiceName=micro-service-service \
                VpcId=vpc-7506541d \
                SubnetIds=subnet-028d36cf8a06c963e,subnet-0810d01cb42cc41e1 \
                SecurityGroupIds=sg-bbf5fddd

      # 7) If the deploy fails, dump CloudFormation error events
      - name: Dump CloudFormation error events
        if: failure()
        run: |
          aws cloudformation describe-stack-events \
            --stack-name micro-service-ecs \
            --region ${{ env.AWS_REGION }} \
            --query 'StackEvents[?ResourceStatus==`CREATE_FAILED` || ResourceStatus==`UPDATE_ROLLBACK_FAILED`]' \
            --output table
